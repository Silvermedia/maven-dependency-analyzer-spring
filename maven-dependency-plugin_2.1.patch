Index: src/main/java/org/apache/maven/plugin/dependency/AbstractAnalyzeMojo.java
===================================================================
--- src/main/java/org/apache/maven/plugin/dependency/AbstractAnalyzeMojo.java	(revision 942469)
+++ src/main/java/org/apache/maven/plugin/dependency/AbstractAnalyzeMojo.java	(working copy)
@@ -33,6 +33,12 @@
 import org.apache.maven.shared.dependency.analyzer.ProjectDependencyAnalysis;
 import org.apache.maven.shared.dependency.analyzer.ProjectDependencyAnalyzer;
 import org.apache.maven.shared.dependency.analyzer.ProjectDependencyAnalyzerException;
+import org.codehaus.plexus.PlexusConstants;
+import org.codehaus.plexus.PlexusContainer;
+import org.codehaus.plexus.component.repository.exception.ComponentLookupException;
+import org.codehaus.plexus.context.Context;
+import org.codehaus.plexus.context.ContextException;
+import org.codehaus.plexus.personality.plexus.lifecycle.phase.Contextualizable;
 import org.codehaus.plexus.util.xml.PrettyPrintXMLWriter;
 
 /**
@@ -44,11 +50,20 @@
  * @since 2.0-alpha-5
  */
 public abstract class AbstractAnalyzeMojo
-    extends AbstractMojo
+    extends AbstractMojo implements Contextualizable
 {
     // fields -----------------------------------------------------------------
 
     /**
+	 * The plexus context to
+	 * look-up the right 
+	 * {@link ProjectDependencyAnalyzer}
+	 * implementation depending
+	 * on the mojo configuration. 
+	 */
+    private Context context;
+
+    /**
      * The Maven project to analyze.
      * 
      * @parameter expression="${project}"
@@ -58,13 +73,11 @@
     private MavenProject project;
 
     /**
-     * The Maven project dependency analyzer to use.
+     * Project dependency analyzer to use (plexus component role-hint).
      * 
-     * @component
-     * @required
-     * @readonly
+     * @parameter expression="${analyzer}" default-value="default"
      */
-    private ProjectDependencyAnalyzer analyzer;
+    private String analyzer;
 
     /**
      * Whether to fail the build if a dependency warning is found.
@@ -157,19 +170,37 @@
         }
     }
 
+    protected ProjectDependencyAnalyzer createAnalyzer() throws ContextException, ComponentLookupException {
+    	
+    	final String role = ProjectDependencyAnalyzer.ROLE;
+    	final String roleHint = analyzer;
+    	
+    	final PlexusContainer container = (PlexusContainer) 
+    		context.get( PlexusConstants.PLEXUS_KEY );
+    	
+		return (ProjectDependencyAnalyzer) container.lookup( role  , roleHint );
+    }
+    
+    public void contextualize( Context context ) throws ContextException {
+    	this.context = context;
+    }
+    
     // private methods --------------------------------------------------------
 
     private boolean checkDependencies()
         throws MojoExecutionException
     {
+    	
         ProjectDependencyAnalysis analysis;
         try
         {
-            analysis = analyzer.analyze( project );
+            analysis = createAnalyzer().analyze( project );
         }
         catch ( ProjectDependencyAnalyzerException exception )
         {
             throw new MojoExecutionException( "Cannot analyze dependencies", exception );
+        } catch(Exception exception) {
+            throw new MojoExecutionException( "Internal error", exception );
         }
 
         Set usedDeclared = analysis.getUsedDeclaredArtifacts();
Index: pom.xml
===================================================================
--- pom.xml	(revision 942469)
+++ pom.xml	(working copy)
@@ -29,7 +29,7 @@
   </parent>
   
   <artifactId>maven-dependency-plugin</artifactId>
-  <version>2.1</version>
+  <version>2.1-SNAPSHOT</version>
   <packaging>maven-plugin</packaging>
 
   <name>Maven Dependency Plugin</name>
@@ -162,7 +162,7 @@
     <dependency>
       <groupId>org.apache.maven.shared</groupId>
       <artifactId>maven-dependency-analyzer</artifactId>
-      <version>1.1</version>
+      <version>1.1-SNAPSHOT</version>
     </dependency>
     <dependency>
       <groupId>org.apache.maven.shared</groupId>
